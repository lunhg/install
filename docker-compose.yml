
######
 #     #  ######  #####   ######  #       #  #    #  #####   ###### 
 #     #  #       #    #  #       #       #  #    #  #    #  #       
 ######   #####   #    #  #####   #       #  #    #  #    #  #####  
 #   #    #       #    #  #       #       #  #    #  #####   #      
 #    #   #       #    #  #       #       #   #  #   #   #   #      
 #     #  ######  #####   ######  ######  #    ##    #    #  ######
 #
 # Todas os containers das imagens definidas neste arquivo foram
 # desesnvolvidas na versão dois do padrão de desenvolvimento
 # definido pela equipe do docker-compose.
 #
 # Para manter a compatibilidade dos projetos que extendem outros
 # containers referenciados, a mesma versão deve ser utilizada no
 # arquivo docker-compose contextualizado.
 #
 # Variáveis de ambiente serão utilizadas como forma dinâmica de
 # configuração das imagens geradas pelo docker. Para uma configuração
 # apropriada, será utilizado o arquivo `.env`, com valores abstratos
 # e configuráveis.
version: '2'

# Rede utilizada e gerenciada pelo container
# [traefik](https://docs.traefik.io/) (load balancer)
networks:
  rl:
    ipam:
      driver: default
      config:
      - subnet:  10.0.0.0/8

# Serviços:
# - imagens de base
# - web
# - bases de dados
services:
    # ====
    # BASE
    # ====

    # git@gitlab:install/alpine.git
    alpine:
        extends:
            file: ../alpine/docker-compose.yml
            service: alpine
        environment:
            - "username=$username"
        volumes:
            - alpine_bin:/usr/bin
            - alpine_local:/usr/local
            - alpine_home:/home/$username
            - alpine_run:/var/run
            - alpine_log:/var/log

    # git@gitlab:install/alpine-redis.git
    __redis__:
        extends:
            file: ../alpine-redis/docker-compose.yml
            service: base
        volumes:
            - alpine_run:/var/run
            - alpine_log:/var/log
            - alpine_home:/home/$username/
            - redis_etc:/etc/redis/
        depends_on:
            - alpine

    # git@gitlab:install/alpine-node.git
    __node__:
        extends:
            file: ../alpine-node/docker-compose.yml
            service: node
        environment:
            - "username=$username"
        depends_on:
            - alpine

    # ===
    # DBs
    # ===
    postgres:
        restart: always
        environment:
            POSTGRES_PASSWORD: senhaMapas
            POSTGRES_USER: mapas
            POSTGRES_DB: mapas
            POSTGRES_DB_TEST: mapasculturais_test
        build:
            context: ../mapasculturais
            dockerfile: docker/dev/Dockerfile-db
        ports:
            - 5432:5432
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            rl:

    memcached:
        image: memcached:alpine
        ports:
            - 11211:11211
        networks:
            rl:

    mariadb:
        image: mariadb
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: 11111
            MYSQL_DATABASE: wp 
            MYSQL_USER: wp
            MYSQL_PASSWORD: password
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            rl:

    # git@gitlab:install/alpine-redis.git
    redis:
        extends:
            file: ../alpine-redis/docker-compose.yml
            service: server
        ports:
            - "6379:6379"
        networks:
            rl:
        volumes:
            - alpine_run:/var/run/
            - alpine_log:/var/log/
            - alpine_home:/home/$username/
            - redis_etc:/etc/redis/
        depends_on:
            - alpine
            - __redis__

    redisAdmin:
        extends:
            file: ../alpine-redis/docker-compose.yml
            service: cli
        command: set "admin.$username.pwd" $username
        volumes:
            - alpine_run:/var/run
            - alpine_log:/var/log
            - alpine_home:/home/$username
        depends_on:
            - alpine
            - __redis__
            - redis
    
    # UI for redis
    redisUI:
        extends:
            file: ../redis-ui/docker-compose.yml
            service: web
        ports:
            - "3034:3000"

        volumes:
            - alpine_home:/home/$username
        labels: 
            traefik.docker.network: rl
            traefik.frontend.rule: Host:$redisUI
            traefik.port: '3000'
            traefik.enable: 'true'

        depends_on:
            - alpine
            - __node__
            - __redis__
            - redis
            - redisAdmin

    
    # ===
    # WEB 
    # ===

    # https://github.com.dev.org.br/login-cidadao
    app_lc:
        image: redelivre/login-cidadao
        build:
            context: ../login-cidadao/
            args:
                TIMEZONE: "America/Sao_Paulo"
        volumes:
            # - ../login-cidadao/:/var/www/html
            - ./logs/app_lc:/var/www/html/app/logs
        links:
            - mariadb:db
        depends_on:
            - mariadb
            - __redis__
            - redis
            - memcached
            - smtp
        networks:
            rl:

    # https://github.com/hacklabr/mapasculturais
    app_mc:
        image: redelivre/mapasculturais
        build:
            context: ../mapasculturais/
            args:
                TIMEZONE: "America/Sao_Paulo"
        volumes:
            # - ../mapasculturais/:/var/www/html/
            - ./logs/app_mc/:/var/www/html/src/protected/logs
        environment:
            MAILER_SERVER: smtp
            MAILER_PORT: 8045
            SLIM_DEBUG: 'true'
            MAPASCULTURAIS_CONFIG_FILE: config.php
            DB_PASS: senhaMapas
            DB_USER: mapas
            DB_NAME: mapas
            DB_HOST: postgres
        links:
            - postgres
        depends_on:
            - postgres
        networks:
            rl:

    # https://github.com.dev.org.br/2.0
    app_wp:
        image: redelivre/wordpress
        build: ../wordpress
        depends_on:
            - mariadb
            - smtp
            - s3
        links:
            - mariadb
            - smtp
            - s3
        volumes:
            - ../wordpress:/var/www/html/
            - ./logs/app_wp/:/var/log/nginx
            # - /etc/php7/php.ini
        environment:
            DB_NAME: wp
            DB_USER: root
            DB_PASSWORD: 11111
            DB_HOST: mariadb
            DB_PREFIX: wp_
            WP_ENV: development
            WP_HOME: https://dev.org.br
            WP_SITEURL: https://dev.org.br/wp
        networks:
            rl:

    web_lc:
        image: redelivre/login-cidadao-nginx
        build: lc/web
        ports:
            - 83:80
            - 436:443
        depends_on:
            - app_lc
        volumes:
            - ./logs/web_lc/:/var/log/nginx
        labels:
            traefik.frontend.rule: Host:$loginCidadao
            traefik.port: '80'
            traefik.enable: 'true'
            traefik.alias: lc
        networks:
            rl:

    web_mc:
        image: redelivre/mapasculturais-nginx
        build: mc/web
        ports:
            - 82:80
            - 435:443
        depends_on:
            - app_mc
        volumes:
            - ./logs/web_mc/:/var/log/nginx
        labels:
            traefik.frontend.rule: Host:mc.redelivre
            traefik.port: '80'
            traefik.enable: 'true'
            traefik.alias: mc
        networks:
            rl:
    
    web_wp:
        image: redelivre/wordpress-nginx
        build: wp/web
        ports:
            - 81:80
            - 434:443
        depends_on:
            - app_wp
        links:
            - app_wp
        volumes:
            - ./logs/web_wp:/var/log/nginx
        volumes_from:
            - app_wp
        environment:
            VIRTUAL_HOST: dev.org.br
            VIRTUAL_PORT: 80
        # substitute hostname to nginx conf; syntax from here: https://github.com/docker-library/docs/issues/496#issuecomment-203003827
        command: /bin/sh -c "envsubst '$$VIRTUAL_HOST' < /etc/nginx/site.conf.template > /etc/nginx/site.conf && nginx -g 'daemon off;'"
        labels:
            traefik.frontend.rule: Host:$wordpress
            traefik.port: '80'
            traefik.enable: 'true'
        networks:
            rl:

    s3:
        image: minio/minio
        environment:
            MINIO_ACCESS_KEY: admin
            MINIO_SECRET_KEY: password
        volumes:
            - s3_data:/data
        ports:
            - 9000:9000/tcp
        command:
            - server
            - /data
        labels:
            traefik.frontend.rule: Host:$minio
            traefik.port: '9000'
            traefik.enable: 'true'
            traefik.alias: s3
        networks:
            rl:

    adminer:
        image: adminer
        restart: always
        ports:
        - 9090:8080
        labels:
            traefik.frontend.rule: Host:$adminer
            traefik.port: '8080'
            traefik.enable: 'true'
            traefik.alias: adminer
        networks:
            rl:

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        depends_on:
            - mariadb
        links:
            - mariadb
        environment:
            VIRTUAL_PORT: 80
            VIRTUAL_HOST: 
            PMA_ABSOLUTE_URI: http://$phpmyadmin/
            PMA_ARBITRARY: 1
            PMA_HOST: mariadb
            PMA_PORT: 3306
            PMA_USER: root 
            PMA_PASSWORD: 11111 
        labels:
            traefik.frontend.rule: Host:$phpmyadmin
            traefik.port: '80'
            traefik.enable: 'true'
            traefik.alias: s3
        networks:
            rl:

    smtp:
        image: mailhog/mailhog
        environment:
            MH_HOSTNAME: $smtp
        ports:
            - 1025:1025/tcp
            - 8025:8025/tcp
        labels:
            traefik.frontend.rule: Host:$smtp
            traefik.port: '8025'
            traefik.enable: 'true'
            traefik.alias: smtp
        networks:
            rl:

    elk:
        image: willdurand/elk
        ports:
            - 84:80
        volumes:
            - ./elk/logstash:/etc/logstash
            - ./elk/logstash/patterns:/opt/logstash/patterns
        volumes_from:
            - app_lc
            - web_lc
        labels:
            traefik.frontend.rule: Host:$elk
            traefik.port: '80'
            traefik.enable: 'true'
            traefik.alias: elk
        networks:
            rl:

    traefik:
        image: redelivre/loadbalancer
        build:
            context: lb
        ports:
            - 80:80/tcp
            - 8080:8080/tcp
            - 443:443/tcp
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
              #- "./lb/traefik.toml:/etc/traefik/traefik.toml"
        labels:
            traefik.frontend.rule: Host:$traefik
            traefik.alias: traefik
            traefik.port: '8080'
            traefik.enable: 'true'
        networks:
            rl:
              ipv4_address: 10.0.0.100


    # ====
    # BOTS
    # ====
    # git@gitlab:install/tg-bot
    tg_bot:
        extends:
            file: ../tg-bot/docker-compose.yml
            service: bot
        ports:
            - "3030:3000"
        environment:
            - "PORT='3000'"
            - "redis_host=$assistente_redis_host"
            - "redis_port=$assistente_redis_port"
            - "redis_db=$assistente_redis_db"
        labels:
            - "traefik.docker.network=rl"
            - "traefik.frontend.rule=Host:$tgbot"
            - "traefik.port='3000'"
            - "traefik.enable='true'"
        depends_on:
            - alpine
            - __node__

    assistente_api:
        extends:
            file: ../assistente/docker-compose.yml
            service: api
        ports:
            - "3032:3000"
        labels:
            traefik.docker.network: rl
            traefik.frontend.rule: Host:$api
            traefik.port: '3000'
            traefik.enable: 'true'
        depends_on:
            - alpine
            - __node__
# =======
# VOLUMES
# =======
volumes:
    postgres_data:
    s3_data:
    mysql_data:
    alpine_bin:
    alpine_local:
    alpine_home:
    alpine_run:
    alpine_log:
    redis_etc:

